/*
 * The MIT License
 *
 * Copyright (c) 1997-2020 The University of Utah
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#ifndef SCI_SYCL_DEFS_H
#define SCI_SYCL_DEFS_H

@DEF_SYCL@
#define SCI_SYCL_ASSERTION_LEVEL @ASSERTION_LEVEL@

#ifdef HAVE_SYCL

#  include <CL/sycl.hpp>
#  include <utility>

#  ifdef __cplusplus
extern "C" {
#  endif

#  include <stdio.h>

   using gpuStream_t = sycl::queue;
  
// Allow easy indexing into deice-side 3D array
#  define INDEX3D(dx,dy,i,j,k) ((i) + ((j)*dx) + ((k)*dx*dy))

// int3 bound checking
#  if SCI_SYCL_ASSERTION_LEVEL >= 3
#    define CHECK_INSIDE( idx, offset, size ) {                                                          \
       if (idx.x < offset.x || idx.y< offset.y || idx.z < offset.z ||                                    \
           idx.x > offset.x + size.x || idx.y > offset.y + size.y || idx.z > offset.z + size.z)          \
              printf ("GPU OUT_OF_BOUND ERROR: (%d, %d, %d) not inside (%d, %d, %d)-(%d, %d, %d) \n",    \
                      idx.x, idx.y, idx.z, offset.x, offset.y, offset.z,                                 \
                      offset.x+size.x, offset.y+size.y, offset.z+size.z);                                \
     }
#  else 
#    define  CHECK_INSIDE( idx, offset, size )
#  endif

#  if SCI_SYCL_ASSERTION_LEVEL >= 3
#    define CHECK_INSIDE3( x, y, z, offset, size ) {                                                      \
       if (x < offset.x || y< offset.y || z < offset.z ||                                                 \
           x > offset.x + size.x || y > offset.y + size.y || z > offset.z + size.z)                       \
             printf ("GPU OUT_OF_BOUND ERROR: (%d, %d, %d) not inside (%d, %d, %d)-(%d, %d, %d) \n",      \
                     x, y, z, offset.x, offset.y, offset.z,                                               \
                     offset.x+size.x, offset.y+size.y, offset.z+size.z);                                  \
     }
#  else 
#    define  CHECK_INSIDE3( x, y, z, offset, size )
#  endif

#  if SCI_SYCL_ASSERTION_LEVEL >= 3
#    define CHECK_RANGE( idx, low, high ) {                                                    \
        if (idx < low || idx > high )                                                            \
              printf ("GPU INDEX_OUT_OF_RANGE ERROR: index (%d) not in range [%d, %d] \n",       \
                      idx, low, high);                                                           \
     }
#  else 
#    define CHECK_RANGE( idx, low, high )
#  endif

#  ifdef __cplusplus
}
#  endif       

#endif // HAVE_SYCL

#endif // SCI_SYCL_DEFS_H

